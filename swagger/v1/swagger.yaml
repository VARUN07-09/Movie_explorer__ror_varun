openapi: 3.0.1
info:
  title: Movie Explorer+ API
  version: v1
  description: API for managing movies, subscriptions, user authentication, payments, and push notifications via Firebase Cloud Messaging (FCM).

paths:
  /api/v1/signup:
    post:
      summary: User signup
      description: Creates a new user account. Requires a `user` object with name, email, password, and password_confirmation.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Full name of the user
                    email:
                      type: string
                      format: email
                      description: User's email address
                    password:
                      type: string
                      description: User's password (minimum 6 characters)
                    password_confirmation:
                      type: string
                      description: Confirmation of the user's password
                  required:
                    - name
                    - email
                    - password
                    - password_confirmation
              required:
                - user
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                    required:
                      - id
                      - name
                      - email
                      - role
                  token:
                    type: string
                    description: JWT token for authentication
                required:
                  - user
                  - token
        '422':
          description: Invalid input (e.g., invalid email, password mismatch)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/login:
    post:
      summary: User login
      description: Authenticates a user and returns a JWT token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      description: User's email address
                    password:
                      type: string
                      description: User's password
                  required:
                    - email
                    - password
              required:
                - auth
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                    required:
                      - id
                      - name
                      - email
                      - role
                  token:
                    type: string
                    description: JWT token for authentication
                required:
                  - user
                  - token
        '401':
          description: Unauthorized (invalid email or password)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/user:
    get:
      summary: Get user details
      description: Fetches details of the authenticated user.
      tags:
        - Authentication
      security:
        - Bearer: []
      responses:
        '200':
          description: Successful response with user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                      profile_picture_url:
                        type: string
                        nullable: true
                        description: URL of the user's profile picture
                    required:
                      - id
                      - name
                      - email
                      - role
                required:
                  - user
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/update_profile_picture:
    post:
      summary: Update user profile picture
      description: Uploads or updates the authenticated user's profile picture.
      tags:
        - Authentication
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_picture:
                  type: string
                  format: binary
                  description: Profile picture image (PNG/JPEG, max 5MB)
              required:
                - profile_picture
      responses:
        '200':
          description: Profile picture updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                      profile_picture_url:
                        type: string
                        nullable: true
                    required:
                      - id
                      - name
                      - email
                      - role
                  message:
                    type: string
                required:
                  - user
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input (e.g., missing file)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/toggle_notifications:
    post:
      summary: Toggle notifications
      description: Enables or disables push notifications for the authenticated user.
      tags:
        - Notifications
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notifications_enabled:
                  type: boolean
                  description: Whether notifications are enabled
              required:
                - notifications_enabled
      responses:
        '200':
          description: Notification preference updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  notifications_enabled:
                    type: boolean
                required:
                  - message
                  - notifications_enabled
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/update_device_token:
    post:
      summary: Update device token
      description: Updates the FCM device token for push notifications.
      tags:
        - Notifications
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
                  description: FCM device token
              required:
                - device_token
      responses:
        '200':
          description: Device token updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/create_stripe_customer:
    post:
      summary: Create Stripe customer
      description: Creates a Stripe customer for the authenticated user.
      tags:
        - Authentication
      security:
        - Bearer: []
      responses:
        '201':
          description: Stripe customer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  customer_id:
                    type: string
                    description: Stripe customer ID
                required:
                  - message
                  - customer_id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Stripe error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/movies:
    get:
      summary: List movies
      description: Retrieves a paginated list of movies with optional filters.
      tags:
        - Movies
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          description: Page number (10 movies per page)
        - name: search
          in: query
          schema:
            type: string
          description: Search term for movie titles
        - name: genre
          in: query
          schema:
            type: string
          description: Filter by genre
        - name: release_year
          in: query
          schema:
            type: integer
          description: Filter by release year
        - name: rating
          in: query
          schema:
            type: number
            format: float
          description: Filter by minimum rating
          security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre:
                          type: string
                        release_year:
                          type: integer
                        rating:
                          type: number
                          format: float
                        director:
                          type: string
                        duration:
                          type: string
                        streaming_platform:
                          type: string
                        main_lead:
                          type: string
                        description:
                          type: string
                        premium:
                          type: boolean
                        poster_url:
                          type: string
                          nullable: true
                        banner_url:
                          type: string
                          nullable: true
                      required:
                        - id
                        - title
                        - genre
                        - release_year
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                    required:
                      - current_page
                      - total_pages
                      - total_count
                required:
                  - movies
                  - meta

    post:
      summary: Create a movie
      description: Creates a new movie (admin/supervisor only).
      tags:
        - Movies
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                genre:
                  type: string
                release_year:
                  type: integer
                rating:
                  type: number
                  format: float
                director:
                  type: string
                duration:
                  type: string
                streaming_platform:
                  type: string
                main_lead:
                  type: string
                description:
                  type: string
                premium:
                  type: boolean
                poster:
                  type: string
                  format: binary
                banner:
                  type: string
                  format: binary
              required:
                - title
                - genre
                - release_year
      responses:
        '201':
          description: Movie created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                    format: float
                  director:
                    type: string
                  duration:
                    type: string
                  streaming_platform:
                    type: string
                  main_lead:
                    type: string
                  description:
                    type: string
                  premium:
                    type: boolean
                  poster_url:
                    type: string
                    nullable: true
                  banner_url:
                    type: string
                    nullable: true
                required:
                  - id
                  - title
                  - genre
                  - release_year
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/movies/search:
    get:
      summary: Search movies
      description: Searches movies with filters (same as /api/v1/movies).
      tags:
        - Movies
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: search
          in: query
          schema:
            type: string
        - name: genre
          in: query
          schema:
            type: string
        - name: release_year
          in: query
          schema:
            type: integer
        - name: rating
          in: query
          schema:
            type: number
            format: float
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre:
                          type: string
                        release_year:
                          type: integer
                        rating:
                          type: number
                          format: float
                        director:
                          type: string
                        duration:
                          type: string
                        streaming_platform:
                          type: string
                        main_lead:
                          type: string
                        description:
                          type: string
                        premium:
                          type: boolean
                        poster_url:
                          type: string
                          nullable: true
                        banner_url:
                          type: string
                          nullable: true
                      required:
                        - id
                        - title
                        - genre
                        - release_year
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                    required:
                      - current_page
                      - total_pages
                      - total_count
                required:
                  - movies
                  - meta

  /api/v1/movies/watchlist:
    get:
      summary: Get watchlist
      description: Fetches the authenticated user's watchlist.
      tags:
        - Movies
      security:
        - Bearer: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre:
                          type: string
                        release_year:
                          type: integer
                        rating:
                          type: number
                          format: float
                        director:
                          type: string
                        duration:
                          type: string
                        streaming_platform:
                          type: string
                        main_lead:
                          type: string
                        description:
                          type: string
                        premium:
                          type: boolean
                        poster_url:
                          type: string
                          nullable: true
                        banner_url:
                          type: string
                          nullable: true
                      required:
                        - id
                        - title
                        - genre
                        - release_year
                required:
                  - movies
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/movies/toggle_watchlist:
    post:
      summary: Toggle watchlist
      description: Adds or removes a movie from the authenticated user's watchlist.
      tags:
        - Movies
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movie_id:
                  type: integer
                  description: ID of the movie
              required:
                - movie_id
      responses:
        '201':
          description: Movie added to watchlist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '200':
          description: Movie removed from watchlist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/movies/{id}:
    get:
      summary: Get movie
      description: Fetches a specific movie by ID.
      tags:
        - Movies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                    format: float
                  director:
                    type: string
                  duration:
                    type: string
                  streaming_platform:
                    type: string
                  main_lead:
                    type: string
                  description:
                    type: string
                  premium:
                    type: boolean
                  poster_url:
                    type: string
                    nullable: true
                  banner_url:
                    type: string
                    nullable: true
                required:
                  - id
                  - title
                  - genre
                  - release_year
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    patch:
      summary: Update movie
      description: Updates a movie (admin/supervisor only).
      tags:
        - Movies
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                genre:
                  type: string
                release_year:
                  type: integer
                rating:
                  type: number
                  format: float
                director:
                  type: string
                duration:
                  type: string
                streaming_platform:
                  type: string
                main_lead:
                  type: string
                description:
                  type: string
                premium:
                  type: boolean
                poster:
                  type: string
                  format: binary
                banner:
                  type: string
                  format: binary
              required:
                - title
                - genre
                - release_year
      responses:
        '200':
          description: Movie updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                    format: float
                  director:
                    type: string
                  duration:
                    type: string
                  streaming_platform:
                    type: string
                  main_lead:
                    type: string
                  description:
                    type: string
                  premium:
                    type: boolean
                  poster_url:
                    type: string
                    nullable: true
                  banner_url:
                    type: string
                    nullable: true
                required:
                  - id
                  - title
                  - genre
                  - release_year
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

    delete:
      summary: Delete movie
      description: Deletes a movie (admin/supervisor only).
      tags:
        - Movies
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movie deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/subscription_plans:
    get:
      summary: List subscription plans
      description: Fetches all available subscription plans.
      tags:
        - Subscriptions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    plan_type:
                      type: string
                      enum: [1-day, 1-month, 3-months]
                    price:
                      type: number
                      format: float
                    duration:
                      type: string
                    description:
                      type: string
                  required:
                    - id
                    - name
                    - plan_type
                    - price
                    - duration
        '404':
          description: Plans not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/subscription_plans/{id}:
    get:
      summary: Get subscription plan
      description: Fetches a specific subscription plan by ID.
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  plan_type:
                    type: string
                    enum: [1-day, 1-month, 3-months]
                  price:
                    type: number
                    format: float
                  duration:
                    type: string
                  description:
                    type: string
                required:
                  - id
                  - name
                  - plan_type
                  - price
                  - duration
        '404':
          description: Plan not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/user_subscriptions:
    get:
      summary: List user subscriptions
      description: Fetches all subscriptions for the authenticated user.
      tags:
        - Subscriptions
      security:
        - Bearer: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    start_date:
                      type: string
                      format: date
                    end_date:
                      type: string
                      format: date
                    status:
                      type: string
                      enum: [active, inactive]
                    expires_at:
                      type: string
                      format: date-time
                      nullable: true
                    plan_type:
                      type: string
                      enum: [1-day, 1-month, 3-months]
                  required:
                    - id
                    - start_date
                    - end_date
                    - status
                    - plan_type
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      summary: Buy subscription
      description: Initiates a Stripe checkout session for a subscription plan.
      tags:
        - Subscriptions
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_type:
                  type: string
                  enum: [1-day, 1-month, 3-months]
                  description: Subscription plan type
              required:
                - plan_type
      responses:
        '200':
          description: Checkout session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  url:
                    type: string
                    description: Stripe checkout URL
                required:
                  - session_id
                  - url
        '400':
          description: Invalid plan_type
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Stripe error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/user_subscriptions/success:
    get:
      summary: Subscription success callback
      description: Handles successful Stripe checkout and creates a subscription.
      tags:
        - Subscriptions
      parameters:
        - name: session_id
          in: query
          required: true
          schema:
            type: string
          description: Stripe checkout session ID
      responses:
        '200':
          description: Subscription created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '422':
          description: Stripe error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/user_subscriptions/cancel:
    get:
      summary: Subscription cancel callback
      description: Handles cancellation of a Stripe checkout session.
      tags:
        - Subscriptions
      responses:
        '200':
          description: Payment cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message

  /api/v1/user_subscriptions/status:
    get:
      summary: Get subscription status
      description: Checks the status of the authenticated user's active subscription and downgrades to 1-day if expired.
      tags:
        - Subscriptions
      security:
        - Bearer: []
      responses:
        '200':
          description: Successful response with subscription status
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan_type:
                    type: string
                    enum: [1-day, 1-month, 3-months]
                  message:
                    type: string
                    nullable: true
                    description: Message indicating downgrade if expired
                required:
                  - plan_type
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: No active subscription found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT