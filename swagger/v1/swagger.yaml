openapi: 3.0.1
info:
  title: Movie Explorer+ API
  version: v1
  description: API for managing movies, subscriptions, user authentication, and push notifications via Firebase Cloud Messaging (FCM).

paths:
  /api/v1/signup:
    post:
      summary: User signup
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Full name of the user
                    email:
                      type: string
                      format: email
                      description: User's email address
                    password:
                      type: string
                      description: User's password
                    password_confirmation:
                      type: string
                      description: Confirmation of the user's password
                  required:
                    - name
                    - email
                    - password
                    - password_confirmation
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                    required:
                      - id
                      - name
                      - email
                      - role
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      description: User's email address
                    password:
                      type: string
                      description: User's password
                  required:
                    - email
                    - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token to authenticate subsequent requests
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      role:
                        type: string
                    required:
                      - id
                      - name
                      - email
                      - role
                required:
                  - token
                  - user
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/update_device_token:
    post:
      summary: Update user's device token for push notifications
      description: Updates the user's FCM device token to enable push notifications. Required for sending notifications when notifications_enabled is true.
      tags:
        - Notifications
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
                  description: FCM (Firebase Cloud Messaging) token for push notifications
              required:
                - device_token
      responses:
        '200':
          description: Device token updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input (e.g., blank token)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/toggle_notifications:
    post:
      summary: Toggle user notification preferences
      description: Enable or disable push notifications for the user. If enabled, the user will receive notifications for new movies (requires device_token to be set).
      tags:
        - Notifications
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notifications_enabled:
                  type: boolean
                  description: Whether the user wants to receive push notifications for new movies
              required:
                - notifications_enabled
      responses:
        '200':
          description: Notification preferences updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message
                  notifications_enabled:
                    type: boolean
                    description: Current state of notification preference
                required:
                  - message
                  - notifications_enabled
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/movies:
    get:
      summary: List movies
      tags:
        - Movies
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          description: Page number for pagination (10 movies per page)
        - name: search
          in: query
          schema:
            type: string
          description: Search term for movie titles (case-insensitive)
        - name: genre
          in: query
          schema:
            type: string
          description: Filter movies by genre
        - name: release_year
          in: query
          schema:
            type: integer
          description: Filter movies by release year
        - name: rating
          in: query
          schema:
            type: number
            format: float
          description: Filter movies by minimum rating
      responses:
        '200':
          description: Successful response with movie list
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre:
                          type: string
                        release_year:
                          type: integer
                        rating:
                          type: number
                          format: float
                        director:
                          type: string
                        duration:
                          type: string
                        streaming_platform:
                          type: string
                        main_lead:
                          type: string
                        description:
                          type: string
                        premium:
                          type: boolean
                        poster_url:
                          type: string
                          nullable: true
                          description: URL of the movie poster (Cloudinary)
                        banner_url:
                          type: string
                          nullable: true
                          description: URL of the movie banner (Cloudinary)
                      required:
                        - id
                        - title
                        - genre
                        - release_year
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                    required:
                      - current_page
                      - total_pages
                      - total_count
                required:
                  - movies
                  - meta

    post:
      summary: Create a movie
      description: Creates a new movie and sends FCM push notifications to users with notifications_enabled set to true (requires device_token to be set via /api/v1/update_device_token).
      tags:
        - Movies
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the movie
                genre:
                  type: string
                  description: Genre of the movie
                release_year:
                  type: integer
                  description: Release year of the movie
                rating:
                  type: number
                  format: float
                  description: Movie rating (0-10)
                director:
                  type: string
                  description: Director of the movie
                duration:
                  type: string
                  description: Duration of the movie (e.g., '2h 30m')
                streaming_platform:
                  type: string
                  description: Streaming platform for the movie
                main_lead:
                  type: string
                  description: Main lead actor/actress
                description:
                  type: string
                  description: Movie description
                premium:
                  type: boolean
                  description: Whether the movie is premium content
                poster:
                  type: string
                  format: binary
                  description: Movie poster image file (PNG/JPEG, max 5MB)
                banner:
                  type: string
                  format: binary
                  description: Movie banner image file (PNG/JPEG, max 5MB)
              required:
                - title
                - genre
                - release_year
      responses:
        '201':
          description: Movie created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                    format: float
                  director:
                    type: string
                  duration:
                    type: string
                  streaming_platform:
                    type: string
                  main_lead:
                    type: string
                  description:
                    type: string
                  premium:
                    type: boolean
                  poster_url:
                    type: string
                    nullable: true
                    description: URL of the movie poster (Cloudinary)
                  banner_url:
                    type: string
                    nullable: true
                    description: URL of the movie banner (Cloudinary)
                required:
                  - id
                  - title
                  - genre
                  - release_year
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/movies/{id}:
    get:
      summary: Get a movie
      tags:
        - Movies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with movie details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                    format: float
                  director:
                    type: string
                  duration:
                    type: string
                  streaming_platform:
                    type: string
                  main_lead:
                    type: string
                  description:
                    type: string
                  premium:
                    type: boolean
                  poster_url:
                    type: string
                    nullable: true
                    description: URL of the movie poster (Cloudinary)
                  banner_url:
                    type: string
                    nullable: true
                    description: URL of the movie banner (Cloudinary)
                required:
                  - id
                  - title
                  - genre
                  - release_year
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    patch:
      summary: Update a movie
      tags:
        - Movies
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the movie
                genre:
                  type: string
                  description: Genre of the movie
                release_year:
                  type: integer
                  description: Release year of the movie
                rating:
                  type: number
                  format: float
                  description: Movie rating (0-10)
                director:
                  type: string
                  description: Director of the movie
                duration:
                  type: string
                  description: Duration of the movie (e.g., '2h 30m')
                streaming_platform:
                  type: string
                  description: Streaming platform for the movie
                main_lead:
                  type: string
                  description: Main lead actor/actress
                description:
                  type: string
                  description: Movie description
                premium:
                  type: boolean
                  description: Whether the movie is premium content
                poster:
                  type: string
                  format: binary
                  description: Movie poster image file (PNG/JPEG, max 5MB)
                banner:
                  type: string
                  format: binary
                  description: Movie banner image file (PNG/JPEG, max 5MB)
              required:
                - title
                - genre
                - release_year
      responses:
        '200':
          description: Movie updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                    format: float
                  director:
                    type: string
                  duration:
                    type: string
                  streaming_platform:
                    type: string
                  main_lead:
                    type: string
                  description:
                    type: string
                  premium:
                    type: boolean
                  poster_url:
                    type: string
                    nullable: true
                    description: URL of the movie poster (Cloudinary)
                  banner_url:
                    type: string
                    nullable: true
                    description: URL of the movie banner (Cloudinary)
                required:
                  - id
                  - title
                  - genre
                  - release_year
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string

    delete:
      summary: Delete a movie
      tags:
        - Movies
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movie deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/subscription_plans:
    get:
      summary: Get available subscription plans
      tags:
        - Subscriptions
      responses:
        '200':
          description: A list of available subscription plans
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                      format: float
                    duration:
                      type: integer
                      description: Duration of the plan in months
                    plan_type:
                      type: string
                      enum:
                        - free
                        - basic
                        - premium
                    description:
                      type: string
                  required:
                    - id
                    - name
                    - price
                    - duration
                    - plan_type

  /api/v1/user_subscriptions/buy:
    post:
      summary: User buys a subscription
      tags:
        - Subscriptions
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_id:
                  type: integer
                  description: The ID of the subscription plan the user wants to purchase
                stripe_token:
                  type: string
                  description: The Stripe token generated on the frontend to process the payment (sent from Stripe.js)
              required:
                - plan_id
                - stripe_token
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  plan_id:
                    type: integer
                  start_date:
                    type: string
                    format: date
                  end_date:
                    type: string
                    format: date
                  status:
                    type: string
                required:
                  - id
                  - plan_id
                  - start_date
                  - end_date
                  - status
        '422':
          description: Invalid input or payment failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/user_subscriptions/{id}:
    get:
      summary: Get user subscription details
      tags:
        - Subscriptions
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: User subscription ID
      responses:
        '200':
          description: Successful response with subscription details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  plan_id:
                    type: integer
                  start_date:
                    type: string
                    format: date
                  end_date:
                    type: string
                    format: date
                  status:
                    type: string
                required:
                  - id
                  - plan_id
                  - start_date
                  - end_date
                  - status
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/v1/notifications/test:
    post:
      summary: Test FCM notification
      tags:
        - Notifications
      security:
        - Bearer: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Notification title (optional, defaults to 'Test Notification')
                body:
                  type: string
                  description: Notification body (optional, defaults to 'This is a test notification')
      responses:
        '200':
          description: Test notification sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Failed to send notification
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT